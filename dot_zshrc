source ~/antigen.zsh

[ -f ~/.zsh_local ] && source ~/.zsh_local # local configs, private envs

# lang
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"

# antigen setup
antigen use oh-my-zsh

antigen bundle git
antigen bundle pip
antigen bundle bundler
antigen bundle z

antigen bundle zsh-users/zsh-completions
antigen bundle Aloxaf/fzf-tab

antigen apply

# Aliases
alias o="open"
alias dl="aria2c"

# HISTORY
setopt EXTENDED_HISTORY   # enable more detailed history (time, command, etc.)
setopt SHARE_HISTORY      # share history across multiple zsh sessions
setopt APPEND_HISTORY     # append to history
setopt INC_APPEND_HISTORY # adds commands as they are typed, not at shell exit
setopt HIST_VERIFY        # let you edit !$, !! and !* before executing the command
setopt HIST_IGNORE_DUPS   # do not store duplications
setopt HIST_REDUCE_BLANKS # removes blank lines from history
setopt HIST_IGNORE_SPACE  # command without history when prefix with Space
HISTSIZE=10000000
SAVEHIST=$HISTSIZE

# Editor
export EDITOR="nvim"

# homebrew
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_VERBOSE=1

[ -f /opt/homebrew/bin/brew ] && eval "$(/opt/homebrew/bin/brew shellenv)"

if type brew &>/dev/null; then
  export PATH="$(brew --prefix)/bin:$PATH"
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH

  autoload -Uz compinit
  compinit
fi

# PATH
export PATH=~/.bin:$PATH

# Nvim
if type nvim >/dev/null; then
  alias vi="nvim"
  alias v="nvim"
  alias vim="nvim"
fi

# Github CLI
if type gh >/dev/null; then
  eval "$(gh completion -s zsh)"
fi

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --no-ignore-vcs'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# starship
if type starship >/dev/null; then
  eval "$(starship init zsh)"
fi

# ghq https://github.com/x-motemen/ghq
export GHQ_ROOT=~/code

# restic
export RESTIC_REPOSITORY="rest:http://restic:restic@vault:8000"
export RESTIC_PASSWORD_COMMAND="op read 'op://Personal/vault/restic encryption'"

# exa alias
if type exa >/dev/null; then
  # general use
  alias ls='exa'                                                         # ls
  alias l='exa -lbF --git'                                               # list, size, type, git
  alias ll='exa -lbGF --git'                                             # long list
  alias llm='exa -lbGF --git --sort=modified'                            # long list, modified date sort
  alias la='exa -lbhHigUmuSa --time-style=long-iso --git --color-scale'  # all list
  alias lx='exa -lbhHigUmuSa@ --time-style=long-iso --git --color-scale' # all + extended list

  # speciality views
  alias lS='exa -1'               # one column, just names
  alias lt='exa --tree --level=2' # tree
fi

if type rtx >/dev/null; then
  eval "$(rtx activate zsh)"
fi

n ()
{
    # Block nesting of nnn in subshells
    [ "${NNNLVL:-0}" -eq 0 ] || {
        echo "nnn is already running"
        return
    }

    # The behaviour is set to cd on quit (nnn checks if NNN_TMPFILE is set)
    # If NNN_TMPFILE is set to a custom path, it must be exported for nnn to
    # see. To cd on quit only on ^G, remove the "export" and make sure not to
    # use a custom path, i.e. set NNN_TMPFILE *exactly* as follows:
    #      NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    # The command builtin allows one to alias nnn to n, if desired, without
    # making an infinitely recursive alias
    command nnn "$@"

    [ ! -f "$NNN_TMPFILE" ] || {
        . "$NNN_TMPFILE"
        rm -f "$NNN_TMPFILE" > /dev/null
    }
}

# fzf-tab
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
